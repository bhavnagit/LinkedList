/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public boolean isPalindrome(ListNode head) {
        ArrayList<Integer> ans = new ArrayList<>();
        //store the linkedlist value in the new arraylist and checking the reverse of arraylist withthe original list;
        ListNode temp = head;
        
        while(temp != null){
            ans.add(temp.val);
            temp = temp.next;
        }
        int i = ans.size() - 1;
        while(head != null){
            if(head.val != ans.get(i))
                return false;
            i--;
            head = head.next;
        }
        return true;
    }
}

The time complexity is O(N) and Space complexity is O(1).
